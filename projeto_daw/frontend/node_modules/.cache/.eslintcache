[{"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\index.tsx":"1","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\footer\\index.tsx":"2","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\header\\index.tsx":"3","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\title\\index.tsx":"4","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\App.tsx":"5","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\routes.tsx":"6","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\home\\index.tsx":"7","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\services\\api.tsx":"8","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\homeBody\\index.tsx":"9","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\funcionarios\\index.tsx":"10","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\empresas\\index.tsx":"11","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\funcBody\\index.tsx":"12","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\empBody\\index.tsx":"13","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\criarRecado\\index.tsx":"14","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\criarRecadoBody\\index.tsx":"15","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\criarFuncionario\\index.tsx":"16","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\criarEmpresa\\index.tsx":"17","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\criarFuncionarioBody\\index.tsx":"18","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\criarEmpresaBody\\index.tsx":"19"},{"size":227,"mtime":1631016245851,"results":"20","hashOfConfig":"21"},{"size":984,"mtime":1631021516239,"results":"22","hashOfConfig":"21"},{"size":786,"mtime":1631882687613,"results":"23","hashOfConfig":"21"},{"size":172,"mtime":1631013670737,"results":"24","hashOfConfig":"21"},{"size":93,"mtime":1631015945684,"results":"25","hashOfConfig":"21"},{"size":807,"mtime":1631883431764,"results":"26","hashOfConfig":"21"},{"size":423,"mtime":1631383053489,"results":"27","hashOfConfig":"21"},{"size":122,"mtime":1631212841662,"results":"28","hashOfConfig":"21"},{"size":2745,"mtime":1631883806668,"results":"29","hashOfConfig":"21"},{"size":441,"mtime":1631793137095,"results":"30","hashOfConfig":"21"},{"size":435,"mtime":1631793277448,"results":"31","hashOfConfig":"21"},{"size":2432,"mtime":1631831941027,"results":"32","hashOfConfig":"21"},{"size":2543,"mtime":1631831967878,"results":"33","hashOfConfig":"21"},{"size":459,"mtime":1631828871984,"results":"34","hashOfConfig":"21"},{"size":2222,"mtime":1631882287622,"results":"35","hashOfConfig":"21"},{"size":478,"mtime":1631883132544,"results":"36","hashOfConfig":"21"},{"size":458,"mtime":1631883270936,"results":"37","hashOfConfig":"21"},{"size":2281,"mtime":1631883821361,"results":"38","hashOfConfig":"21"},{"size":2227,"mtime":1631882857530,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"sdge7h",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\index.tsx",[],["82","83"],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\footer\\index.tsx",["84"],"  import './index.css'\r\n const Footer = () => {\r\n    return (\r\n        <>\r\n        <footer className=\"footer mt-auto py-3 bg-dark\">\r\n  <div className=\"container\" id=\"container-footer\">\r\n    <p className=\"text-light\">App desenvolvido por <a href=\"https://github.com/joaooujdq\" target=\"_blank\" rel=\"noreferrer\">João Marcelo T.  de Sousa</a>, </p>\r\n    <p className=\"text-light\"><a href=\"https://github.com/fabriicioa\" target=\"_blank\" rel=\"noreferrer\">Fabricio Andrade de Sousa</a>,\r\n    <a href=\"https://github.com/Marcos-Vinicius-Vilela-Franco\" target=\"_blank\" rel=\"noreferrer\"> Marcos Vinicius V. Franco.</a></p>\r\n    <p className=\"text-light\"><small><strong>Desenvolvimento de Aplicações WEB - BCC - UFJ</strong><br/>\r\n      Disciplina de Desenvolvimento de Aplicações WEB: <a href=\"https://github.com/marcoswagner-commits/gestao_obras_aula_daw\" target=\"_blank\" rel=\"noreferrer\"></a></small></p>\r\n  </div>\r\n     </footer>\r\n        </>\r\n    );\r\n} \r\n\r\n\r\nexport default Footer;\r\n\r\n","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\header\\index.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\title\\index.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\App.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\routes.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\home\\index.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\services\\api.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\homeBody\\index.tsx",["85","86"],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\funcionarios\\index.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\empresas\\index.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\funcBody\\index.tsx",["87","88"],"\r\nimport {  useEffect, useState } from \"react\";\r\nimport api from \"../../../services/api\";\r\nimport { FiArrowLeft, FiArrowRight } from \"react-icons/fi\";\r\nimport '../funcBody/index.css'\r\n\r\ninterface imensagem {\r\n\r\n    codigo_rec: number,\r\n    empresa_rec: string,\r\n    status_rec: string,\r\n    prioridade_rec: string,\r\n    setor_rec: string,\r\n    mensagem_rec: string,\r\n    funcionario: ifuncionario,\r\n    empresa: iempresa,\r\n    _links: i_links,\r\n    tipo_rec: string\r\n}\r\n\r\ninterface ifuncionario {\r\n    codigo_func: number;\r\n    nome_func: string;\r\n    cargo_func: string;\r\n    login_func: string;\r\n    senha_func: string;\r\n    tipo_func: string;\r\n}\r\ninterface iempresa {\r\n    codigo_emp: number,\r\n    nome_emp: string,\r\n    razao_emp: string,\r\n    cnpj_emp: string,\r\n    endereco_emp: string,\r\n    telefone_emp: string\r\n}\r\n\r\ninterface i_links {\r\n    self: iself\r\n}\r\n\r\ninterface iself {\r\n    href: string\r\n}\r\n\r\nconst FuncBody: React.FC = () => {\r\n    const [Msg, setMsg] = useState<imensagem[]>([]);\r\n    const [page, setPage]= useState(0);\r\n\r\n\r\n    async function loadMsg() {\r\n        const response = api.get('/v1/elx/recados/',{params:{page:page,limit:3}});\r\n        setMsg((await response).data._embedded.recadoDTOList);\r\n\r\n     \r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadMsg()\r\n    },[page]);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n          \r\n          <body>\r\n              \r\n          \r\n                \r\n                <thead>\r\n                    {\r\n                        Msg.map(m => (\r\n                            <ul id='funcBody'>\r\n                                <li>{m.funcionario.codigo_func}</li>\r\n                                <li>{m.funcionario.nome_func}</li>\r\n                                <li>{m.funcionario.cargo_func}</li>\r\n                                <li>{m.funcionario.tipo_func}</li>\r\n                                <li id='deleteButton'>Excluir</li>\r\n                            </ul>\r\n                        ))\r\n\r\n                    }\r\n               \r\n               </thead>\r\n              \r\n               </body>\r\n\r\n               <div id='carouselBar'>\r\n                    <FiArrowLeft id='carouselIcon' onClick = { () => {if( page - 1 >= 0)setPage(page-1)   }  }/>\r\n                    <FiArrowRight id='carouselIcon' onClick = {() => {if(Msg.length == 3)setPage(page+1)   }  }/>\r\n\r\n                </div>\r\n\r\n        </>\r\n            );\r\n\r\n}\r\n\r\n            export default FuncBody;\r\n\r\n","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\empBody\\index.tsx",["89","90"],"\r\nimport {  useEffect, useState } from \"react\";\r\nimport api from \"../../../services/api\";\r\nimport { FiArrowLeft, FiArrowRight } from \"react-icons/fi\";\r\nimport '../empBody/index.css'\r\n\r\ninterface imensagem {\r\n\r\n    codigo_rec: number,\r\n    empresa_rec: string,\r\n    status_rec: string,\r\n    prioridade_rec: string,\r\n    setor_rec: string,\r\n    mensagem_rec: string,\r\n    funcionario: ifuncionario,\r\n    empresa: iempresa,\r\n    _links: i_links,\r\n    tipo_rec: string\r\n}\r\n\r\ninterface ifuncionario {\r\n    codigo_func: number;\r\n    nome_func: string;\r\n    cargo_func: string;\r\n    login_func: string;\r\n    senha_func: string;\r\n    tipo_func: string;\r\n}\r\ninterface iempresa {\r\n    codigo_emp: number,\r\n    nome_emp: string,\r\n    razao_emp: string,\r\n    cnpj_emp: string,\r\n    endereco_emp: string,\r\n    telefone_emp: string\r\n}\r\n\r\ninterface i_links {\r\n    self: iself\r\n}\r\n\r\ninterface iself {\r\n    href: string\r\n}\r\n\r\nconst EmpBody: React.FC = () => {\r\n    const [Msg, setMsg] = useState<imensagem[]>([]);\r\n    const [page, setPage]= useState(0);\r\n\r\n\r\n    async function loadMsg() {\r\n        const response = api.get('/v1/elx/recados/',{params:{page:page,limit:3}});\r\n        setMsg((await response).data._embedded.recadoDTOList);\r\n\r\n     \r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadMsg()\r\n    },[page]);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n          \r\n          <body>\r\n              \r\n          \r\n                \r\n                <thead>\r\n                    {\r\n                        Msg.map(m => (\r\n                            <ul id='empBody'>\r\n                                <li>{m.empresa.codigo_emp}</li>\r\n                                <li>{m.empresa.nome_emp}</li>\r\n                                <li>{m.empresa.endereco_emp}</li>\r\n                                <li>{m.empresa.telefone_emp}</li>\r\n                                <li>{m.empresa.razao_emp}</li>\r\n                                <li >{m.empresa.cnpj_emp}</li>\r\n                                <li id='deleteButton'>Excluir</li>\r\n                            </ul>\r\n                        ))\r\n\r\n                    }\r\n               \r\n               </thead>\r\n              \r\n               </body>\r\n\r\n               <div id='carouselBar'>\r\n                    <FiArrowLeft id='carouselIcon' onClick = { () => {if( page - 1 >= 0)setPage(page-1)   }  }/>\r\n                    <FiArrowRight id='carouselIcon' onClick = {() => {if(Msg.length == 3)setPage(page+1)   }  }/>\r\n\r\n                </div>\r\n\r\n        </>\r\n            );\r\n\r\n}\r\n\r\n            export default EmpBody;\r\n\r\n","D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\criarRecado\\index.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\criarRecadoBody\\index.tsx",["91","92","93"],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\criarFuncionario\\index.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\pages\\criarEmpresa\\index.tsx",[],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\criarFuncionarioBody\\index.tsx",["94","95","96"],"D:\\github\\Sistema-de-Recados\\projeto_daw\\frontend\\src\\components\\basics\\criarEmpresaBody\\index.tsx",["97","98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":11,"column":56,"nodeType":"106","endLine":11,"endColumn":161},{"ruleId":"107","severity":1,"message":"108","line":68,"column":7,"nodeType":"109","endLine":68,"endColumn":13,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":105,"column":85,"nodeType":"113","messageId":"114","endLine":105,"endColumn":87},{"ruleId":"107","severity":1,"message":"108","line":60,"column":7,"nodeType":"109","endLine":60,"endColumn":13,"suggestions":"115"},{"ruleId":"111","severity":1,"message":"112","line":92,"column":85,"nodeType":"113","messageId":"114","endLine":92,"endColumn":87},{"ruleId":"107","severity":1,"message":"108","line":60,"column":7,"nodeType":"109","endLine":60,"endColumn":13,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"112","line":94,"column":85,"nodeType":"113","messageId":"114","endLine":94,"endColumn":87},{"ruleId":"117","severity":1,"message":"118","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":21},{"ruleId":"117","severity":1,"message":"121","line":4,"column":23,"nodeType":"119","messageId":"120","endLine":4,"endColumn":35},{"ruleId":"117","severity":1,"message":"122","line":47,"column":12,"nodeType":"119","messageId":"120","endLine":47,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":21},{"ruleId":"117","severity":1,"message":"121","line":4,"column":23,"nodeType":"119","messageId":"120","endLine":4,"endColumn":35},{"ruleId":"117","severity":1,"message":"122","line":47,"column":12,"nodeType":"119","messageId":"120","endLine":47,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":21},{"ruleId":"117","severity":1,"message":"121","line":4,"column":23,"nodeType":"119","messageId":"120","endLine":4,"endColumn":35},{"ruleId":"117","severity":1,"message":"122","line":47,"column":12,"nodeType":"119","messageId":"120","endLine":47,"endColumn":15},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadMsg'. Either include it or remove the dependency array.","ArrayExpression",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["126"],["127"],"@typescript-eslint/no-unused-vars","'FiArrowLeft' is defined but never used.","Identifier","unusedVar","'FiArrowRight' is defined but never used.","'Msg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},{"desc":"128","fix":"131"},"Update the dependencies array to be: [loadMsg, page]",{"range":"132","text":"133"},{"range":"134","text":"133"},{"range":"135","text":"133"},[1347,1353],"[loadMsg, page]",[1289,1295],[1287,1293]]